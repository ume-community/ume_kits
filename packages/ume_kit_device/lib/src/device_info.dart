import 'dart:convert';

import 'package:flutter/material.dart';
import 'package:platform/platform.dart';
import 'package:ume_core/ume_core.dart';

import 'components/battery_tab.dart';
import 'components/network_tab.dart';
import 'components/package_tab.dart';
import 'components/system_tab.dart';

const deviceIconData =
    r'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';
const cpuIconData =
    r'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';

final iconBytes = base64Decode(cpuIconData);

class DeviceInfo extends StatefulWidget implements Pluggable {
  final Platform platform;

  DeviceInfo({this.platform = const LocalPlatform()});

  @override
  _DeviceInfoState createState() => _DeviceInfoState();

  @override
  Widget buildWidget(BuildContext? context) => this;

  @override
  ImageProvider<Object> get iconImageProvider => MemoryImage(iconBytes);

  @override
  String get name => 'DeviceInfo';

  @override
  String get displayName => 'DeviceInfo';

  @override
  void onTrigger() {}
}

class _DeviceInfoState extends State<DeviceInfo> {
  @override
  void initState() {
    super.initState();
  }

  @override
  Widget build(BuildContext context) {
    return DefaultTabController(
      length: 4,
      child: Scaffold(
        appBar: AppBar(
          bottom: const TabBar(
            tabs: [
              Tab(
                icon: Icon(Icons.settings),
                text: 'System',
              ),
              Tab(
                icon: Icon(Icons.settings_ethernet),
                text: 'Network',
              ),
              Tab(
                icon: Icon(Icons.battery_std),
                text: 'Battery',
              ),
              Tab(
                icon: Icon(Icons.info),
                text: 'Package',
              ),
            ],
          ),
          title: const Text('Device Info'),
        ),
        body: const TabBarView(
          children: [
            SystemTab(),
            NetworkTab(),
            BatteryTab(),
            PackageTab(),
          ],
        ),
      ),
    );
  }
}

// Tab(icon: Icon(Icons.devices), text: 'Device'),
// Tab(icon: Icon(Icons.info), text: 'Package'),
// Tab(icon: Icon(Icons.settings_ethernet), text: 'Network'),
// Tab(icon: Icon(Icons.battery_std), text: 'Battery'),
// Tab(icon: Icon(Icons.sensors), text: 'Sensors'),
// Tab(icon: Icon(Icons.bluetooth), text: 'Bluetooth'),
